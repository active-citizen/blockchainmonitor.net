@model BlockchainMonitor.WebUI.ViewModels.MainPage.BlockChainVM
@using BlockchainMonitor.WebUI.Utils
@using BlockchainMonitor.WebUI.ViewModels.MainPage
@{
    ViewBag.Title = "Мониторинг блокчейн базы";
}

@section scripts {
@Scripts.Render("~/bundles/appscripts")
<script src="~/signalr/hubs"></script>

<script>
    var model = new BlockChainVM(@Html.ToJson(Model));

    $(function () {
        ko.applyBindings(model);

        var blockchain = $.connection.blockchainHub;
        blockchain.client.updateLastBlockTransactionCount = model.updateLastBlockTransactionCount;

        blockchain.client.updateLastTransactions = model.updateLastTransactions;
        model.animateTransactions();

        $.connection.hub.start();
    });
</script>
}

<div class="row">
    <!--monitoring data-->
    <div class="col-md-8">
        <!--blocks-->
        <div class="row">
            <div class="blockchain-container">
                <div class="blockchain-line">
                    <div class="row">
                        <div class="col-xs-9">
                            <h3 class="pull-left blockchain-h3">Блоки транзакций системы блокчейн</h3>
                            <!--blocks navigation buttons-->
                        </div>
                        <div class="col-xs-3">
                            <div class="pull-right blockchain-navigation-buttons">
                                <div class="btn-group" role="group" aria-label="All Blocks">
                                    <button type="button" class="btn btn-default" onclick="carouselPrev('#blocksCarousel')">
                                        <span class="glyphicon glyphicon-menu-left" aria-hidden="true"></span>
                                    </button>
                                    <button type="button" class="btn btn-default" onclick="carouselNext('#blocksCarousel')">
                                        <span class="glyphicon glyphicon-menu-right" aria-hidden="true"></span>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <!--blocks-->
            <div class="blockchain-container">
                <div id="blocksCarousel"
                     class="blockchain-carousel"
                     data-bind="owlCarousel: { data: allBlocks, owlOptions: { pagination: false, navigation: false, rewindNav: false } }">
                    <div class="external-block pull-left">
                        <div class="internal-block-1">
                            <div class="internal-block-2">
                                <div class="internal-block-3 text-white">
                                    <div class="text-center">Блок №</div>
                                    <div data-bind="text: number" class="text-center"></div><br />
                                    <div class="text-center">Всего транзакций</div>
                                    <div data-bind="text: transactionsCount" class="text-center"></div><br />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!--numbers + transations-->
        <div class="row">
            <!--numbers-->
            <div class="col-md-6">
                <table border="1">
                    <tr>
                        <td>
                            <div>Всего блоков</div>
                            <div data-bind="text: statistics.blocksCount"></div>
                        </td>
                        <td>
                            <div>Всего транзакций</div>
                            <div data-bind="text: statistics.transactionsCount"></div>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <div>Размер базы данных</div>
                            <div data-bind="text: statistics.dataBaseSizeGB"></div>
                        </td>
                        <td>
                            <div>Всего смартконтрактов</div>
                            <div data-bind="text: statistics.smartContractsCount"></div>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <div>Всего валидаторов</div>
                            <div data-bind="text: statistics.validatingNodesCount"></div>
                        </td>
                        <td>
                            <div>Остальные ноды</div>
                            <div data-bind="text: statistics.nonValidatingNodesCount"></div>
                        </td>
                    </tr>
                    <tr></tr>
                </table>
                <div>
                    <!--ВЕРСТАЛЬЩИКУ: ActionLink превращается в <a> на него можно вот так навесить класс, а можно на внешний див-->
                    @Html.ActionLink("Вся статистика", "Index", "Statisctics", new { @class = "all-statistic-link"})
                </div>
            </div>
            <!--transactions-->
            <div class="col-md-6">
                 <div>Последние транзакции</div>
                 <table border="1">
                    <thead>
                        <tr>
                            <td>Идентификатор</td>
                            <td>Смартконтракт</td>
                            <td>Время</td>
                            <td>Данные</td>
                        </tr>
                    </thead>
                </table>
                <div class="transactions-list" data-bind="foreach: transactions">
                    <div class="transaction in-transition">
                        <table border="1">
                            <tr>
                                <td data-bind="text: id"></td>
                                <td data-bind="text: smartContractId"></td>
                                <td data-bind="text: time"></td>
                                <td data-bind="text: data"></td>
                            </tr>
                        </table>                    
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--participants data-->
    <div class="col-md-4">
        @Html.Partial("_ParticipantPartial", new ParticipantListVM("Участники онлайн") { Participants = Model.AliveParticipants })
        @Html.Partial("_ParticipantPartial", new ParticipantListVM("Участники офлайн") { Participants = Model.DeadParticipants })
    </div>
</div>